{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "haskell_literate",
  "rules": {
    "source_file": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "bird_line"
              },
              {
                "type": "SYMBOL",
                "name": "latex_code_block"
              },
              {
                "type": "SYMBOL",
                "name": "markdown_code_block"
              },
              {
                "type": "SYMBOL",
                "name": "blank_line"
              },
              {
                "type": "SYMBOL",
                "name": "prose_line"
              }
            ]
          }
        }
      ]
    },
    "bird_line": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": ">"
            },
            {
              "type": "STRING",
              "value": "<"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": " "
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "haskell_code"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_newline"
        }
      ]
    },
    "latex_code_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "latex_begin"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "latex_code_line"
              },
              {
                "type": "SYMBOL",
                "name": "blank_line"
              }
            ]
          }
        },
        {
          "type": "SYMBOL",
          "name": "latex_end"
        }
      ]
    },
    "latex_begin": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\\begin{code}"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "%"
                },
                {
                  "type": "PATTERN",
                  "value": "[^\\r\\n]*"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_newline"
        }
      ]
    },
    "latex_end": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\\end{code}"
        },
        {
          "type": "SYMBOL",
          "name": "_newline"
        }
      ]
    },
    "latex_code_line": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "haskell_code"
        },
        {
          "type": "SYMBOL",
          "name": "_newline"
        }
      ]
    },
    "markdown_code_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "markdown_begin"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "markdown_code_line"
              },
              {
                "type": "SYMBOL",
                "name": "blank_line"
              }
            ]
          }
        },
        {
          "type": "SYMBOL",
          "name": "markdown_end"
        }
      ]
    },
    "markdown_begin": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "```haskell"
        },
        {
          "type": "SYMBOL",
          "name": "_newline"
        }
      ]
    },
    "markdown_end": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "```"
        },
        {
          "type": "SYMBOL",
          "name": "_newline"
        }
      ]
    },
    "markdown_code_line": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "haskell_code"
        },
        {
          "type": "SYMBOL",
          "name": "_newline"
        }
      ]
    },
    "haskell_code": {
      "type": "PATTERN",
      "value": "[^\\r\\n]*"
    },
    "prose_line": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "([^\\\\><\\r\\n`]|`{1,2}[^`])[^\\r\\n]*"
        },
        {
          "type": "SYMBOL",
          "name": "_newline"
        }
      ]
    },
    "blank_line": {
      "type": "SYMBOL",
      "name": "_newline"
    },
    "_newline": {
      "type": "PATTERN",
      "value": "\\r?\\n"
    }
  },
  "extras": [],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
